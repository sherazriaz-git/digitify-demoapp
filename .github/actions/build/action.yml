name: "Docker image build and publish"
description: "Docker image build and publish"


inputs:
  aws-region:
    required: true
    description: "AWS Region"
  terraform-execution-iam-role-arn:
    required: true
    description: "Terraform Execution IAM Role ARN"
  ecr-repo-name: 
    required: true
    description: "ECR Repo Name"
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.terraform-execution-iam-role-arn }}
        role-session-name: terraform-execution-role
        aws-region: ${{ inputs.aws-region }}
        role-duration-seconds: 1200
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registries: ${{ inputs.aws_account_id }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-publish
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr-repo-name }}
      run: |
        COMMIT_HASH=$(echo "${GITHUB_SHA}" | cut -c1-7)
        docker build  -t "$ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_HASH" .
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_HASH"
        echo "IMAGE $COMMIT_HASH is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
        echo "image_tag=$COMMIT_HASH" 
        echo "full_image=$ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_HASH"
        docker tag "$ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_HASH" "$ECR_REGISTRY/$ECR_REPOSITORY:latest" 
        docker push "$ECR_REGISTRY/$ECR_REPOSITORY:latest" 



# ${{ steps.commit.outputs.short }}